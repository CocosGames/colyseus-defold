local ColyseusClient = require "colyseus.client"

local client
local room

-- OPTIONAL: defold-websocket allows to set a `connect_timeout` option.
local ColyseusConnection = require "colyseus.connection"
ColyseusConnection.config = { connect_timeout = 10 }

function init(self)
    -- Add initialization code here
    -- Remove this function if not needed
    client = ColyseusClient.new("ws://localhost:2657")

    client:on("open", function()
        print("colyseus-defold: connection opened!")
    end)

    client:on("close", function()
        print("colyseus-defold: connection closed!")
    end)

    client:on("message", function(message)
        print("colyseus-defold: message received!")
    end)

    client:on("error", function(err)
        print("colyseus-defold: error")
        print(err)
    end)

    -- join chat room
    room = client:join("chat", { create = true })
    room:on("join", function()
      print("joined 'chat'")
    end)

    room:listen("players/:id/:axis", function(change)
      pprint(change)
    end)

    room:on("statechange", function(state)
      -- print("STATE CHANGE")
      -- pprint(state)
    end)

    room:on("leave", function()
      print("left 'chat'")
    end)
end

function final(self)
    -- Add finalization code here
    -- Remove this function if not needed
end

function update(self, dt)
   client:loop()

   -- Add update code here
   -- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
   -- Add message-handling code here
   -- Remove this function if not needed
end

function on_input(self, action_id, action)
   -- Add input-handling code here
   -- Remove this function if not needed
end

function on_reload(self)
   -- Add reload-handling code here
   -- Remove this function if not needed
end
