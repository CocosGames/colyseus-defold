local Colyseus = require "colyseus.client"

local client
local room

--[[
--
-- OPTIONAL: defold-websocket allows to set a `connect_timeout` option.
--

local ColyseusConnection = require "colyseus.connection"
ColyseusConnection.config = { connect_timeout = 10 }

--]]

function init(self)
    -- Add initialization code here
    -- Remove this function if not needed
    client = Colyseus.new("ws://localhost:2567", false)

    client:on("open", function()
        print("colyseus-defold: connection opened!")
    end)

    client:on("close", function()
        print("colyseus-defold: connection closed!")
    end)

    client:on("error", function(err)
        print("colyseus-defold: error")
        print(err)
    end)

    client.auth:login(function(err, auth)
      print("AUTH DATA:")
      pprint(auth)

      client.auth.username = "Endel"
      client.auth:save(function(err, data)
        pprint(data)
        pprint(client.auth)
      end)

      -- join chat room
      room = client:join("chat_schema", { create = true })
      -- room = client:join("chat", { create = true })

      room:on("join", function()
        print("joined 'chat'")

        -- print("PLAYERS:")
        -- pprint(room.state.players)
        -- pprint(room.state.messages)

        room.state.messages['on_add'] = function(msg, i)
          print("message arrived", msg.message)
        end

        room.state.players['on_add'] = function(player, i)
          print("new player")
          pprint(player)
        end

        room.state['on_change'] = function(changes)
          -- print("state changes")
          -- pprint(changes)
        end

      end)

      room:on("message", function(message)
          print("colyseus-defold: message received!")

          -- pprint(message)
      end)

      room:on("statechange", function(state)
        -- room:send("Hello world!")
        -- print("STATE CHANGE")
        -- pprint(state)
      end)

      room:on("leave", function()
        print("left 'chat'")
      end)

    end)

    client:connect()
end

function final(self)
    -- Add finalization code here
    -- Remove this function if not needed
end

function update(self, dt)
  client:loop()

   -- Add update code here
   -- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
   -- Add message-handling code here
   -- Remove this function if not needed
end

function on_input(self, action_id, action)
   -- Add input-handling code here
   -- Remove this function if not needed
end

function on_reload(self)
   -- Add reload-handling code here
   -- Remove this function if not needed
end
